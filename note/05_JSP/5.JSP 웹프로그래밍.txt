5. JSP 웹프로그래밍
-JSP 내부객체
①request
  (1)getRemoteAddr(); 웹서버에 연결한 클라이언트의 IP주소
  (2)request.getContextPath() : contextPath를 리턴
  (3)getParameter(String name) : name에 해당하는 파라미터 값을 구함
  (4)getParameterValues(String name) : name에 해당하는 파라미터값들을 구함
  (5)getContextPath() : 웹어플리케이션의 컨텍스트 패스(http://localhost:8181/prjName/folderName/ex.jsp중 /prjName)를 얻음
  (6)getMethod() : get방식과 post방식을 구분할 수 있음
  (7)getRequestURL() : 요청 URL를 얻음
  (8)getRequestURI() : 요청 URI를 얻음 
②response
웹브라우저의 요청에 응답하는 것을 response한다고 하며, 이러한 응답(response)의 정보는 response 내부객체가 갖고 있음.
doGet, doPost 메서드의 두번째 파라미터와 동일
③out
웹 브라우저로 HTML 코드를 출력하는 기능.
PrintWriter처럼 스트림 형태로 데이터를 출력하는 클래스는 송신측과 수신측 사이에 가상의 통로를 만듦.
out 내장 객체는 이 통로를 관리하는 객체 변수(객체 타입 : javax.servlet.jsp.JspWriter)

-JSP 태그
①지시자	: <%@	   %>	: 페이지 속성 ex.import, page
②주석	: <%--	 --%> ; 응답 페이지에서는 이 주석은 보이지 않는다. WAS에서 이 주석은 제거하고 응답페이지를 만든다. cf. HTML 주석과 JSP 주석과 비교해 보자
③선언	: <%!	   %>	: 전역변수 및 메소드 선언
④표현식	: <%=	   %>	: 결과값 출력
⑤스크립트릿 : <%	   %>	: JAVA 코드
⑥액션태그    : <jsp:action></jsp:action> : 표준액션태그  ex.파일연결 및 자바빈 연결
     	       <c:set></c:set>          : 커스텀액션태그

-JSP 동작원리
클라이언트가 웹브라우저로 a.jsp를 요청하게 되면 JSP컨테이너가 JSP파일을 Servlet파일(a_jsp.java)로 변환됨.
그리고 Servlet파일(.java)은 컴파일 된 후 클래스 파일(.class)로 변환되고, 요청한 클라이언트한테 html파일 형태로 응답함.
= [웹 브라우저 요청] → [a.jsp 를 a_ jsp.java로 변환] → [a_ jsp.java를 a_ jsp.class로 변환] → [웹브라우저에 HTML 형태로 응답]
