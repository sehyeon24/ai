1. 인터페이스
- 작업명세서(작업지시서) : 실제 구현된 것이 전혀 없는 기본 설계도.
		     객체를 생성할 수 없고, 클래스 작성에 도움을 줄 목적으로 사용됨.
		     미리 정해진 규칙에 맞게 구현하도록 표준을 제시하는데 사용됨.
		     추상메서드와 상수 만을 멤버로 가질 수 있음.
- 객체의 다양성 구현.
- 사용법은 어렵지 않지만, 실제 개발에 적용시키기 쉽지 않음.
- 인터페이스를 공부하는데 가장 좋은 방법은 패턴이나 프레임워크(ex. Spring)를 통해 습득하는 것.

2. 인터페이스의 문법
- 'class'대신 'interface' 예약얼르 사용한다는 점에서 클래스와 유사함.
- 실제 구현된 기능 없이 추상메소드와 상수만이 존재.
	public interface 인터페이스이름 {
		public /* static final */ 타입 상수이름 = 값;	/* 생략가능 */
		public /* abstract */ 메서드 이름(매개변수 목록);  //구현된 메소드는 가질 수 없다.
	}
	: 모든 멤버변수는 public static final 이어야 하며 static final은 생략함.
	  모든 메서드는 public abstract 이어야 하며 abstract를 생략함.
- private는 불가 : 상수나 메소드를 만들 때 private 접근 제한자는 불가함.
- 변수 타입 : 인터페이스는 객체를 생성할 수 없고 변수 타입으로만 사용됨. (예외, 익명 구현 객체만이 가능함.)
- 구현은 Implement 되는 클래스에서 함.
