3. 데이터 구조
- 리스트
[]를 이용해서 만들며, 여러 개의 값을 하나의 변수에 저장/관리할 수 있음
list()함수 이용도 가능
인덱스 : 각 요소의 위치. 인덱스는 0부터 시작. 맨 마지막 인덱스는 -1
슬라이싱([from:to(앞까지):by]) : 부분 데이터셋을 추출.
인덱스와 슬라이싱을 이용해서 쓰기와 읽기 지원

- 튜플
리스트([])와 유사하지만 읽기 전용. 수정이 필요없는 데이터에서 사용
수정이 불가하므로 튜플에 데이터 수정, 추가, 삭제 불가(pop, remove, append, extend 불가)
제공되는 함수도 많지 않음
() 이용해서 생성

- 딕셔너리
cf. 자바에서의 hashMap
중괄호({})를 이용해서 딕셔너리 생성. 키(key)-값(value)쌍으로 구성된 자료구조. (index가 없음)
키는 유일한 값(중복 허용 안 함). 키에 list는 사용 불가. 키에 tuple은 사용 가능.
값은 중복 가능. 모든 데이터 타입이 가능.
없는 키의 값을 참조하면 에러 발생
인덱스를 이용한 참조는 지원하지 않음

- 셋
중복을 허용하지 않는 집합(순서x:index없음)
중괄호({})나 set()함수를 이용해서 셋 생성 : set([1, 2]), set({'name':'홍'}), 튜플도 가능
추가 : add(), update()
집합연산자 : |합집합, &교집합, -차집합
삭제 : remove()

- enumerate
반복자 또는 순서 객체로 반복문 처리 시 사용하는 함수 (자바iterator)
리스트, 튜플, 셋을 for문에 사용 시