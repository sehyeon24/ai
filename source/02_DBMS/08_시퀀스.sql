-- [VIII] Sequence : 순차번호 생성기.(테이블과 별개) 인위적인 PK 사용 용도.
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ
    START WITH 1    -- 1부터 시작(기본값)
    INCREMENT BY 1  -- 1씩 증가(기본값)
    MAXVALUE 9999   -- 최대값(까지만 이후에 다시 1)
    MINVALUE 1      -- 최소값
    NOCACHE         -- 시퀀스 값 미리 할당
    NOCYCLE;
SELECT FRIEND_SEQ.NEXTVAL FROM DUAL;    -- 다음 순차번호 생성
SELECT FRIEND_SEQ.CURRVAL FROM DUAL;    -- 시퀀스의 현재 값(1번 이상 생성 후)
-- EX1. FRIEND테이블(NO-PK, NAME, TEL, ADDRESS, LASE_MODIFY)
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ MAXVALUE 99999 NOCACHE NOCYCLE;  -- 5자리
DROP TABLE FRIEND;
CREATE TABLE FRIEND (
    NO              NUMBER(5) PRIMARY KEY,
    NAME            VARCHAR2(30) NOT NULL,
    TEL             VARCHAR2(20) UNIQUE,    -- (UNIQUE는)NULL 허용. NULL이 아닐 때는 유일한 값
                    ADDRESS VARCHAR2(255),
    LAST_MODIFIY    DATE DEFAULT SYSDATE    
);
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '홍길동', NULL, '서울시 관악구');     -- 여러 번 실행 가능
SELECT * FROM FRIEND;
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, NULL, '010-9999-9999', '서울');     -- 에러(NOT NULL): 이름 // 시퀀스는 4까지 실행됨.
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '박길동', '010-9999-9999', '서울');  -- 시퀀스 5번째에 INSERT 됨.
SELECT * FROM FRIEND;

-- EX2. FRIEND테이블(NO20240924001, 날짜002-PK, NAME, TEL, ADDRESS, LASE_MODIFY)
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ MAXVALUE 99999 NOCACHE NOCYCLE;
DROP TABLE FRIEND;
CREATE TABLE FRIEND (
    NO              NUMBER(11) PRIMARY KEY,
    NAME            VARCHAR2(30) NOT NULL,
    TEL             VARCHAR2(20) UNIQUE,    -- (UNIQUE는)NULL 허용. NULL이 아닐 때는 유일한 값
                    ADDRESS VARCHAR2(255),
    LAST_MODIFIY    DATE DEFAULT SYSDATE    
);
SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') || TRIM(TO_CHAR(1, '000')) FROM DUAL; -- TRIM 공백제거
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (TO_CHAR(SYSDATE, 'YYYYMMDD') || TRIM(TO_CHAR(FRIEND_SEQ.NEXTVAL, '000')), 
            '홍길동', NULL, '서울시 관악구');     -- 여러 번 실행 가능
SELECT * FROM FRIEND;

-- QUIZ
-- 아래의 요구사항을 만족하는 데이터베이스를 설계하고, 테이블을 생성, 데이터를 입력하는 SQL문을 조건에 맞게 작성하시오.
-- [요구사항]
-- (1) 같은 이름의 테이블이나 시퀀스가 있을 수 있으니 먼저 삭제하고 테이블을 생성하시오
-- (2) MEMBER 테이블은 필드 별로 다음의 조건을 지켜 생성하시오.
--   ① mNO(번호) : 주키
--	 ② mNAME(이름) : NULL값을 입력할 수 없다
--	 ③ mPW(비밀번호) : 반드시 1~8글자 이내의 문자를 입력한다
--	 ④ mEMAIL(메일) : 모든 데이터는 EMAIL 필드값이 모두 다르게 입력된다.
--	 ⑤ mPOINT(포인트) : 0이상의 값만 입력할 수 있다.
--	 ⑥ mRDATE(가입일) : 입력하지 않을 시, 기본적으로 현재날짜로 입력된다.
--   ⑦ LEVELNO : MEMBER_LEVEL 테이블의 LEVELNO 필드를 참조하는 외래키
-- (3) MEMBER_LEVEL 테이블은 필드 별로 다음의 제약조건을 지킨다.
--	 ① LEVELNO : 주키
--	 ② LEVELNAME : NULL값을 입력할 수 없다	
-- (4) MEMBER 테이블의 mNO번호는 시퀀스(MEMBER_MNO_SQ)를 생성한 뒤 자동생성 번호로 입력
DROP TABLE MEMBER;
DROP TABLE MEMBER_LEVEL;
DROP SEQUENCE MEMBER_MNO_SQ;
CREATE TABLE MEMBER_LEVEL (
    LEVELNO     NUMBER(2) PRIMARY KEY,
    LEVELNAME   VARCHAR2(20) NOT NULL
);
SELECT * FROM MEMBER_LEVEL;
CREATE TABLE MEMBER (
    mNO     NUMBER(4) PRIMARY KEY,
    mNAME   VARCHAR2(20) NOT NULL,
    mPW     VARCHAR2(8),    -- =VARCHAR2(20) CHECK(LENGTH(mPW) BETWEWEN 1 AND 8)
    mEMAIL  VARCHAR2(50) UNIQUE,
    mPOINT  NUMBER(9)   CHECK(0 <= mPOINT),
    mRDATE  DATE DEFAULT SYSDATE,
    LEVELNO NUMBER(2) DEFAULT 0,
    FOREIGN KEY(LEVELNO) REFERENCES MEMBER_LEVEL(LEVELNO)
);
SELECT * FROM MEMBER;
INSERT INTO MEMBER_LEVEL VALUES (-1, 'black');
INSERT INTO MEMBER_LEVEL VALUES (0, '일반');
INSERT INTO MEMBER_LEVEL VALUES (1, '실버');
INSERT INTO MEMBER_LEVEL VALUES (2, '골드');
SELECT * FROM MEMBER_LEVEL;
CREATE SEQUENCE MEMBER_MNO_SQ MAXVALUE 9999 NOCACHE NOCYCLE;
INSERT INTO MEMBER (MNO, MNAME, MPW, MEMAIL, MPOINT, MRDATE, LEVELNO) 
    VALUES (MEMBER_MNO_SQ.NEXTVAL, '홍길동', 'aa', 'hong@hong.com', 0, '22/03/10', 0);
INSERT INTO MEMBER VALUES (MEMBER_MNO_SQ.NEXTVAL, '신길동', 'bb', 'sin@sin.com', 1000, '22/04/01', 1);
SELECT mNO, mNAME, mRDATE, mEMAIL, mPOINT, LEVELNAME
    FROM MEMBER M, MEMBER_LEVEL L
    WHERE M.LEVELNO = L.LEVELNO;
